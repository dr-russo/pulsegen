classdef pulseGenerator < handle
	
properties
	
	COMPort
	AllPorts
	
	Figure
	Popupmenu
	Toggle
	TextBox
	EditBox
	Buttons
	
	Baseline
	PulseWidth
	NumPulses
	Interval
	Reps
	Period
	
	
	Defaults = struct('baseline',500,'pulsewidth',5,'npulses',1,'interval',45,'reps',1,'period',5000);
	Status  %Running(1)/Idle(0)

end
	
methods
		
	function app = pulseGenerator
		
		%Formatting constants
		buttonwidth = 100;
		buttonheight = 30;
		textwidth = 140;
		textheight = 18;
		editwidth = 80;
		editheight = 30;
		units = {'Units','pixels'};
		bgcolor = {'BackgroundColor','k'};
		fgcolor = {'ForegroundColor','w'};
		labelx = 40;
		labelstarty = 350;
		labeldy = 50;
		editx = 45;
		editstarty = 322;
		editdy = 50;
		
		app.Figure = figure('MenuBar','none',...
							'NumberTitle','off',...
							 units{:},...
							'Color','k',...
							'Name','PulseGen',...
							'Position',[800 400 170 440],...
							'Resize','off',...
							'HandleVisibility','callback',...
							'Tag','pulsegenerator',...
							'CreateFcn',@app.findAvailablePorts_CreateFcn,...
							'CloseRequestFcn',@app.closeApp);
							
		app.Popupmenu = uicontrol(app.Figure,...
								'Style','popupmenu',...
								units{:},'Position',[10 390 150 40],...
								'Tag','serialport',...
								'String',['Select Port',app.AllPorts],...
								'Callback',@app.serialPort_Callback);
						   
		app.Toggle = uicontrol(app.Figure,...
								'Style','togglebutton',...
								units{:},'Position',[35 372 buttonwidth buttonheight],...
								'ForegroundColor','b',...
								'String','Laser On/Off',...
								'Tag','laseron',...
								'Callback',@app.laseron_Callback);
						   
		app.Buttons(1) = uicontrol(app.Figure,...
								'Style','pushbutton',...
								units{:},'Position',[35 40 buttonwidth buttonheight],...
								'ForegroundColor','g',...
								'String','Start',...
								'Tag','start',...
								'Callback',@app.start_Callback);
							
		app.Buttons(2) = uicontrol(app.Figure,...
								'Style','pushbutton',...
								units{:},'Position',[35 10 buttonwidth buttonheight],...
								'ForegroundColor','r',...
								'String','Cancel',...
								'Tag','cancel',...
								'Callback',@app.cancel_Callback);
				
		% Input Boxes --------------------------------------------

		app.EditBox(1) = uicontrol(app.Figure,...
								'Style','edit',...
								units{:},'Position',[editx,editstarty,editwidth,editheight],...
								bgcolor{:},fgcolor{:},...
								'String',num2str(app.Defaults.baseline),...
								'Tag','baseline',...
								'Callback',@app.baseline_Callback);
							
		app.EditBox(2) = uicontrol(app.Figure,...
								'Style','edit',...
								units{:},'Position',[editx,editstarty-editdy,editwidth,editheight],...
								bgcolor{:},fgcolor{:},...
								'String',num2str(app.Defaults.pulsewidth),...
								'Tag','pulsewidth',...
								'Callback',@app.pulsewidth_Callback);
							
		app.EditBox(3) = uicontrol(app.Figure,...
								'Style','edit',...
								units{:},'Position',[editx,editstarty-2*editdy,editwidth,editheight],...
								bgcolor{:},fgcolor{:},...
								'String',num2str(app.Defaults.npulses),...
								'Tag','numpulses',...
								'Callback',@app.numpulses_Callback);
							
		app.EditBox(4) = uicontrol(app.Figure,...
								'Style','edit',...
								units{:},'Position',[editx,editstarty-3*editdy,editwidth,editheight],...
								bgcolor{:},fgcolor{:},...
								'String',num2str(app.Defaults.interval),...
								'Tag','interval',...
								'Callback',@app.interval_Callback);
		
		app.EditBox(5) = uicontrol(app.Figure,...
								'Style','edit',...
								units{:},'Position',[editx,editstarty-4*editdy,editwidth,editheight],...
								bgcolor{:},fgcolor{:},...
								'String',num2str(app.Defaults.reps),...
								'Tag','reps',...
								'Callback',@app.reps_Callback);					
							
							
		app.EditBox(6) = uicontrol(app.Figure,...
								'Style','edit',...
								units{:},'Position',[editx,editstarty-5*editdy,editwidth,editheight],...
								bgcolor{:},fgcolor{:},...
								'String',num2str(app.Defaults.period),...
								'Tag','period',...
								'Callback',@app.period_Callback);
							
		% Text Labels ---------------------------------	
		app.TextBox(1) = uicontrol(app.Figure,...
								'Style','text',...
								units{:},'Position',[labelx,labelstarty,textwidth,textheight],...
								bgcolor{:},fgcolor{:},...
								'HorizontalAlignment','left',...
								'String','Baseline (ms)',...
								'Tag','label_baseline');
							   
		app.TextBox(2) = uicontrol(app.Figure,...
								'Style','text',...
								units{:},'Position',[labelx,labelstarty-labeldy,textwidth,textheight],...
								bgcolor{:},fgcolor{:},...
								'HorizontalAlignment','left',...
								'String','Pulse Width (ms)',...
								'Tag','label_pulsewidth');
							
		app.TextBox(3) = uicontrol(app.Figure,...
								'Style','text',...
								units{:},'Position',[labelx,labelstarty-2*labeldy,textwidth,textheight],...
								bgcolor{:},fgcolor{:},...
								'HorizontalAlignment','left',...
								'String','Pulses',...
								'Tag','label_numpulses');
		
		app.TextBox(4) = uicontrol(app.Figure,...
								'Style','text',...
								units{:},'Position',[labelx-20,labelstarty-3*labeldy,textwidth,textheight],...
								bgcolor{:},fgcolor{:},...
								'HorizontalAlignment','left',...
								'String','Inter-pulse Interval (ms)',...
								'Tag','label_interval');
		
		app.TextBox(5) = uicontrol(app.Figure,...
								'Style','text',...
								units{:},'Position',[labelx,labelstarty-4*labeldy,textwidth,textheight],...
								bgcolor{:},fgcolor{:},...
								'HorizontalAlignment','left',...
								'String','Repetitions (ms)',...
								'Tag','label_reps');	
							
		app.TextBox(6) = uicontrol(app.Figure,...
								'Style','text',...
								units{:},'Position',[labelx,labelstarty-5*labeldy,textwidth,textheight],...
								bgcolor{:},fgcolor{:},...
								'HorizontalAlignment','left',...
								'String','Period (ms)',...
								'Tag','label_period');	
							
	end
	
	function findAvailablePorts_CreateFcn(app,hObject,eventdata)
		[~,DeviceList] = unix('ls /dev/');
		app.AllPorts = regexp(DeviceList,'tty\.usbserial[\w\-]+','match');
	end
	
	function serialPort_Callback(app,hObject,eventdata)
		str = get(app.Popupmenu,'String');
		val = get(app.Popupmenu,'Value');
		port = strcat('/dev/',str{val});
		if ~strcmp(port,'/dev/') && ~strcmp(port,'/dev/Select Port') && ~isempty(port)
			app.COMPort = serial(port);
			fopen(app.COMPort);
			set(app.COMPort,'RequestToSend','off');
		end
		
	end
	
	function laseron_Callback(app,hObject,eventdata)
		disp(get(app.Toggle,'Value'));
		switch get(app.Toggle,'Value');
			case 'Max'
				set(app.COMPort,'RequestToSend','off');
			case 'Min'
				set(app.COMPort,'RequestToSend','on');
		end
	end
	
	function start_Callback(app,hObject,eventdata)
		episodetime = app.Baseline+app.NumPulses*(app.PulseWidth+app.Interval);
		if episodetime > app.Period
			app.Period = episodetime;
			set(app.EditBox(6),'String',num2str(app.Period));
		end
		
		app.Status = 1;

		while app.Status
			for m = 1:app.Reps
				app.milliPause(app.Baseline);
				for n = 1:app.NumPulses
					set(app.COMPort,'RequestToSend','on');
					app.milliPause(app.PulseWidth);
					set(app.COMPort,'RequestToSend','off');
					app.milliPause(app.Interval);
				end
				if app.Reps > 1
					pause(app.Period);
				end
			end
		end
	end
	
	function cancel_Callback(app,hObject,eventdata)
		app.Status = 0;
	end
	
	function baseline_Callback(app,hObject,eventdata)
		app.Baseline = str2double(get(app.EditBox(1),'String'));
	end
	
	function pulsewidth_Callback(app,hObject,eventdata)
		app.PulseWidth = str2double(get(app.EditBox(2),'String'));

	end
	
	function numpulses_Callback(app,hObject,eventdata)
		app.NumPulses = str2double(get(app.EditBox(3),'String'));

	end
	
	function interval_Callback(app,hObject,eventdata)
		app.Interval = str2double(get(app.EditBox(4),'String'));

	end
	
	function reps_Callback(app,hObject,eventdata)
		app.Reps = str2double(get(app.EditBox(5),'String'));
	end
	
	function period_Callback(app,hObject,eventdata)
		app.Period = str2double(get(app.EditBox(6),'String'));

	end

	
	
	function closeApp(app,hObject,eventdata)
     	try
			fclose(app.COMPort);
		catch ME
			app.COMPort = [];
		end
		delete(app.Figure);
	end

end

methods(Static)
	
	function milliPause(time)
		t = time/1000;
		tic;
		while toc < t
		end
	end
	
end
	
end %classdef